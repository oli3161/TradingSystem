@startuml exchange_logic

class Client{
    + id : Portfolio
    +submit_order(Order : order, StockExchange : stock_exchange)
    +notify_completed_order(Order)
    +updatePortfolio()
}

class MarketMaker{
+updateOrderPrice(Order)
}

class OrderFlow extends Client{

}



class OrderMatchingEngine{
    +addOrder(Order)
    +removeOrder(Order)
    +getTopOrder()
    -processOrders()
}

class Assets{
    + portfolio_stock : PortfolioStock
    + money_amount 
    + add_stock()
    + add_shares(quanity,price)
    + remove_shares(quantity,price)
    + add_money(amount)
    + remove_money(amount)
}

class Heaps{
    
}



class PortfolioStock{
}

class Porfolio{

}

class StockExchange{

}

class StockMarketListing{
    
}



class Order{
    -client : Client
    +notifyOrderFilled()

}



Assets ..> PortfolioStock : <<uses>> 
Client ..> StockExchange : <<uses>>
Client ..> Order : <<uses>>
Client o-> Portfolio



@enduml